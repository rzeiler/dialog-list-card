(()=>{"use strict";function t(t,e={}){Object.keys(e).forEach(i=>{try{t[i]=e[i]}catch(n){try{t.setAttribute(i,String(e[i]))}catch(t){}}})}function e(t,e={}){Object.keys(e).forEach(i=>{const n=e[i];!1===n||null==n?t.removeAttribute(i):!0===n?t.setAttribute(i,""):t.setAttribute(i,String(n))})}function i(t,e={}){Object.keys(e).forEach(i=>{const n=e[i];!1===n||null==n?t.removeProperty(i):t.setProperty(i,String(n))})}function n(n,s={}){const{props:a={},attrs:o={},slotName:d=null,style:h={},cssVars:l={},text:r=""}=s,c=document.createElement(n);return d&&(c.slot=d),r&&(c.innerText=r),e(c,o),t(c,a),h&&Object.assign(c.style,h),i(c.style,l),c}class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._hass=null,this._config=null}set hass(t){this._hass=t}set config(t){this._config=t}connectedCallback(){}render(){this.dialog=n("ha-dialog",{props:{hideActions:!0,scrimClickAction:!0,escapeKeyAction:!0},cssVars:{"--vertical-align-dialog":"flex-start","--dialog-surface-margin-top":"40px","--dialog-content-padding":"0px","--mdc-dialog-max-height":"calc(100% - 72px)"},attrs:{heading:""}});const t=n("ha-dialog-header"),e=n("span",{attrs:{slot:"title"},text:this._config.dialog_title||this._config.title||"Dialog List"});t.appendChild(e);const i=n("ha-icon-button",{attrs:{slot:"navigationIcon",dialogAction:"cancel",label:`${this._hass.localize("ui.common.close")}`},props:{path:"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"}});t.appendChild(i),this.dialog.appendChild(t),this.dialog.addEventListener("closed",()=>{this.shadowRoot.innerHTML=""}),this.shadowRoot.appendChild(this.dialog),this.list=n("ha-list"),this.dialog.appendChild(this.list),this._config.entities.map(t=>{this._hass.states[t];const e=this.getListItem(t),i=()=>this.serviceCall(e.domain,t);e.addEventListener("click",i),e.addEventListener("touchend",i),this.list.appendChild(e)})}isWide(){return window.matchMedia("(min-width: 590px) and (min-height: 500px)").matches}serviceCall(t,e){var i="toggle";("script"===t||"scene"===t)&&(i="turn_on"),this._hass.callService(t,i,{entity_id:e.entity}).then(t=>{this.dialog.remove()})}open(){this.render();const n=this.isWide()?"570px":"90vw";!function(n,{props:s={},attrs:a={},style:o={},cssVars:d={},text:h=""}={}){null==n||(a&&Object.keys(a).length&&e(n,a),s&&Object.keys(s).length&&t(n,s),o&&Object.keys(o).length&&setStyles(n,o),h&&(n.innerText=h),d&&Object.keys(d).length&&i(n.style,d))}(this.dialog,{cssVars:{"--mdc-dialog-min-width":n,"--mdc-dialog-max-width":n}}),this.dialog.open=!this.dialog.open}getListItem(t){const e="string"==typeof t?t:t.entity,i=this._hass.states[e];if(!i)return;const s=n("ha-md-list-item",{props:{interactive:!0,multiline:!0},attrs:{type:"button"}}),a=n("ha-relative-time",{props:{hass:this._hass,datetime:i?.attributes.last_triggered},attrs:{slot:"supporting-text"}});s.appendChild(a);const o=n("span",{attrs:{slot:"headline",datetime:i?.attributes.last_triggered},text:t.title||i.attributes.friendly_name||e});s.appendChild(o);const d=e.split(".")[0];s.domain=d;const h=n("span",{attrs:{slot:"trailing-supporting-text"},text:d});s.appendChild(h);const l=n("ha-state-icon",{attrs:{slot:"start"},props:{hass:this._hass,stateObj:i},cssVars:{"--mdc-icon-size":"28px"}});return s.appendChild(l),s}}customElements.define("dialog-list",s);class a extends HTMLElement{setConfig(t){this.config={title:"Services",icon:"mdi:unicorn",dialog_title:"Chose Service",state_on_entity:"",host:"",entities:[],...t},this.render()}connectedCallback(){this.shadowRoot||this.attachShadow({mode:"open"}),this.render()}render(){if(!this.shadowRoot)return;if(this.card)return;this.card=n("ha-card",{style:{display:"flex",alignItems:"center",height:"100%",padding:"5px 10px",cursor:"pointer"}}),this.shadowRoot.appendChild(this.card);const t=n("div",{style:{position:"relative",display:"flex",alignItems:"center",justifyContent:"center",minWidth:"36px",height:"36px",borderRadius:"50px",overflow:"hidden",transition:"box-shadow 180ms ease-in-out",backgroundColor:"rgba(158,158,158,0.1)"}});this.card.appendChild(t);const e=n("ha-state-icon",{attrs:{icon:this.config.icon},cssVars:{"--mdc-icon-size":"28px"}});t.appendChild(e);const i=n("ha-info",{style:{padding:"5px 10px",overflow:"hidden"}});this.card.appendChild(i);const s=n("div",{text:this.config.title,style:{display:"block",textOverflow:"ellipsis",overflow:"hidden",whiteSpace:"nowrap"}});i.appendChild(s);let a=this._getLatestFromList(this.config.entities);void 0!==this.config.entities&&0!==this.config.entities.length||(a=Date.now());const o=n("ha-relative-time",{props:{hass:this._hass,datetime:a},style:{fontSize:"90%"}});i.appendChild(o),this.card.addEventListener("click",()=>{this.dialog=n("dialog-list"),this.shadowRoot.appendChild(this.dialog),this.dialog.config=this.config,this.dialog.hass=this._hass,this.dialog.open()})}set hass(t){this._hass=t}get hass(){return this._hass}_getLatestFromList(t){return(t||[]).map(t=>{const e=this._hass.states[t.entity],i=e?.attributes?.last_triggered||e?.last_changed;return i?new Date(i):null}).filter(t=>null!==t).sort((t,e)=>e-t)[0]||null}getCardSize(){return 1}getGridOptions(){return{rows:1,columns:6}}static getConfigElement(){return document.createElement("dialog-list-editor")}}customElements.define("dialog-list-card",a),window.customCards=window.customCards||[],window.customCards.push({type:"dialog-list-card",name:"Dialog List Card",description:"Ein Dialog mit Aktionen",preview:!0});class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._config={title:"Services",icon:"mdi:menu",dialog_title:"Chose Service",state_on_entity:"",host:"",entities:[]}}set hass(t){this._hass=t}setConfig(t){this._config={title:"Services",icon:"mdi:unicorn",dialog_title:"Chose Service",state_on_entity:"",host:"",entities:[],...t},this.renderted?this.update():this.render()}connectedCallback(){this.shadowRoot||this.attachShadow({mode:"open"}),this.renderted?this.update():this.render()}update(){if(!this.shadowRoot)return;if(!this._hass)return;if(!this._config)return;this.shadowRoot.getElementById("title").value=this._config.title||"",this.shadowRoot.getElementById("dialog_title").value=this._config.dialog_title||"",this.shadowRoot.getElementById("icon").value=this._config.icon||"";let t=this.shadowRoot.querySelectorAll("ha-form");const e=Array.from(t).find(t=>"state_on_entity"===t.id);e.schema=[{name:"entity",selector:{entity:{}}}],e.hass=this._hass,e.data={entity:this._config.state_on_entity},e.addEventListener("value-changed",t=>this._updateConfig("state_on_entity",t.detail.value.entity));const i=this.shadowRoot.getElementById("entities");(this._config.entities||[]).map((e,s)=>{let a=Array.from(t).find(t=>t.id===`entity${s}`);void 0===a&&(a=n("ha-form",{attrs:{id:`entity${s}`,class:"pb-1"},style:{"--mdc-dialog-content-ink-color":"transparent"}}),a.addEventListener("value-changed",t=>this._updateEntity(s,t.detail.value.entity)),i.appendChild(a)),a.schema=[{name:"entity",selector:{entity:{}}}],a.hass=this._hass,a.data={entity:e.entity}}),t=this.shadowRoot.querySelectorAll("ha-form"),this.removeLabel(t)}render(){if(!this.shadowRoot)return;if(!this._hass)return;if(!this._config)return;this.renderted=!0,this.shadowRoot.innerHTML=`\n      <style>\n        ha-form-grid {\n          display: grid !important;\n          grid-template-columns: repeat(var(--form-grid-column-count, auto-fit), minmax(var(--form-grid-min-width, 200px), 1fr));\n          grid-column-gap:10px;\n          grid-row-gap: 24px;\n        }\n        --mdc-dialog-content-ink-color: red; \n      </style>\n      <ha-form-expandable>\n        \x3c!-- Titel --\x3e\n        <ha-expansion-panel expanded outlined icon="menu" header="Titles">\n          <ha-form-grid>\n            <ha-textfield\n              label="Title"\n              value="${this._config.title||""}"\n              id="title"\n            ></ha-textfield>\n            <ha-textfield\n              label="Dialog Title"\n              value="${this._config.dialog_title||""}"\n              id="dialog_title"\n            ></ha-textfield>\n            <ha-icon-picker\n              label="Symbol"\n              hass=${this._hass}\n              value="${this._config.icon||""}"\n              id="icon"\n            ></ha-icon-picker>\n          </ha-form-grid>\n          <ha-form\n            id="state_on_entity"\n          ></ha-form>\n        </ha-expansion-panel>\n        <ha-expansion-panel expanded outlined icon="menu" header="Entitäten (erforderlich)">\n          <div id="entities">\n            ${(this._config.entities||[]).map((t,e)=>`<ha-form style="--mdc-dialog-content-ink-color:transparent;" class='pb-1' id="entity${e}"></ha-form>`).join("")}\n            </div>  \n            <ha-button id="addEntity" style="margin-top: 20px;" >+ Entity hinzufügen</ha-button>\n        </ha-expansion-panel>\n      </ha-form-expandable>\n    `;const t=this.shadowRoot.querySelectorAll("ha-form"),e=Array.from(t).find(t=>"state_on_entity"===t.id);e.schema=[{name:"entity",selector:{entity:{}}}],e.hass=this._hass,e.data={entity:this._config.state_on_entity},(this._config.entities||[]).map((e,i)=>{const n=Array.from(t).find(t=>t.id===`entity${i}`);n.schema=[{name:"entity",selector:{entity:{}}}],n.hass=this._hass,n.data={entity:e.entity}}),this.removeLabel(t),this.shadowRoot.getElementById("title")?.addEventListener("input",t=>this._updateConfig("title",t.target.value)),this.shadowRoot.getElementById("dialog_title")?.addEventListener("input",t=>this._updateConfig("dialog_title",t.target.value)),this.shadowRoot.getElementById("icon")?.addEventListener("value-changed",t=>this._updateConfig("icon",t.detail.value)),this.shadowRoot.getElementById("state_on_entity")?.addEventListener("value-changed",t=>this._updateConfig("state_on_entity",t.detail.value.entity)),this._config.entities.forEach((t,e)=>{const i=this.shadowRoot.getElementById(`entity_${e}`);i?.addEventListener("value-changed",t=>this._updateEntity(e,t.detail.value.entity))}),this.shadowRoot.getElementById("addEntity")?.addEventListener("click",()=>this._addEntity())}removeLabel(t){(async()=>{const e=["ha-selector","ha-selector-entity","ha-entity-picker","ha-generic-picker","label"];for(const i of t){let t=i;for(const i of e)if(t=await this.waitForElement(t,i,100),"label"==i&&t&&t.parentNode&&t.parentNode.removeChild(t),!t)break}})()}waitForElement(t,e,i=50){return new Promise(n=>{const s=Date.now(),a=()=>{const o=t?.shadowRoot?.querySelector(e);o||Date.now()-s>i?n(o||null):requestAnimationFrame(a)};a()})}_updateConfig(t,e){this._config={...this._config,[t]:e},this.fireChange()}_updateEntity(t,e){const i=[...this._config.entities];i[t]=e,this._config={...this._config,entities:i},this.fireChange()}_addEntity(){this._config={...this._config,entities:[...this._config.entities,""]},this.fireChange()}fireChange(){const t=new CustomEvent("config-changed",{detail:{config:this._config},bubbles:!0,composed:!0});this.dispatchEvent(t)}}customElements.define("dialog-list-editor",o)})();